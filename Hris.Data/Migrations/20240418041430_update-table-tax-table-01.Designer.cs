// <auto-generated />
using System;
using Hris.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hris.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240418041430_update-table-tax-table-01")]
    partial class updatetabletaxtable01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hris.Data.Models.Administrator.Access", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accesses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc14d014-17b8-47fd-a898-af5dde116c0f"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8643),
                            ModifiedBy = new Guid("94860370-73e1-4711-b8ae-c799a4f3a926"),
                            Module = "Employees",
                            Name = "Employee",
                            Path = "Employee",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("d772ae27-31fe-4912-9301-2ed5868ef479"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8647),
                            ModifiedBy = new Guid("582f813a-3efe-4ce7-8e82-949ad83f573a"),
                            Module = "Employees",
                            Name = "Department",
                            Path = "Department",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("c9b73298-60fd-4375-b50d-fc474d97dc92"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8659),
                            ModifiedBy = new Guid("ed6bb387-39d9-4e83-b44f-800de397283f"),
                            Module = "Employees",
                            Name = "Position",
                            Path = "Position",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("f04c4bc0-9d27-4573-b41d-c2038702da68"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8668),
                            ModifiedBy = new Guid("8462d9f7-1062-4f1e-a72f-c1fbd5a2ea16"),
                            Module = "Employees",
                            Name = "Employee Reports",
                            Path = "Employee-Reports",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("3ef2f8fc-6213-4467-ae65-33d8d10fb23a"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8670),
                            ModifiedBy = new Guid("44c71dc6-dfad-4c5c-8548-032044a15083"),
                            Module = "Employees",
                            Name = "Generate Employee COE",
                            Path = "Employee-Reports/Generate-Coe",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("01fee400-f45b-4cda-ac65-a1235560f9fb"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8672),
                            ModifiedBy = new Guid("5786ee00-debd-401b-a1a0-7e5f93972fbb"),
                            Module = "Clock",
                            Name = "Project",
                            Path = "Project",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("8e15be20-db4d-4116-a97e-42b7ffa2796e"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8676),
                            ModifiedBy = new Guid("146b2a54-8df4-4d08-9f29-1dcf020c697b"),
                            Module = "Clock",
                            Name = "Clients",
                            Path = "Clients",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("77fccf7a-07e0-4caa-9f16-c054bf347dbd"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8677),
                            ModifiedBy = new Guid("b745b6dc-eb7e-437f-a181-da6f3fb480cd"),
                            Module = "Clock",
                            Name = "Track",
                            Path = "Track",
                            Roles = "User,Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("2bfca789-5c82-4f83-997c-5bb62c5cf24e"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8679),
                            ModifiedBy = new Guid("c685c429-3976-4c09-b4a9-d42343d69596"),
                            Module = "Clock",
                            Name = "ChangeRequest",
                            Path = "ChangeRequest",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("e2a6fa50-fbae-4d5a-a4a8-064ce5425b08"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8680),
                            ModifiedBy = new Guid("784a44b6-7f61-4243-9184-bcc4a75e4a87"),
                            Module = "Clock",
                            Name = "AssignProject",
                            Path = "AssignProject",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("d90f6572-720c-48c3-8a20-79aeb559c88d"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8683),
                            ModifiedBy = new Guid("a32a2ffa-ced0-4c30-9943-af950794facb"),
                            Module = "Clock",
                            Name = "Reports",
                            Path = "Reports",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("d3a0d318-1ea7-49c4-abb6-b0bee083153e"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8684),
                            ModifiedBy = new Guid("1e12805f-be14-4648-b645-fbf3a1a6a734"),
                            Module = "Clock",
                            Name = "ImportTracks",
                            Path = "Import-Tracks",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("1d80c167-39d1-4895-8cb1-eb902bce3af8"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8687),
                            ModifiedBy = new Guid("57d412d9-83f5-42f4-9870-702de857a299"),
                            Module = "Payroll",
                            Name = "AllowanceType",
                            Path = "AllowanceType",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("c4813b9f-d036-462d-9e9f-8bc76835e7f9"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8689),
                            ModifiedBy = new Guid("13eee6ee-094e-48a1-abdc-f8fbd627549a"),
                            Module = "Payroll",
                            Name = "Entitlements",
                            Path = "Entitlements",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("26109092-c849-4053-8705-19ee5bf2502a"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8692),
                            ModifiedBy = new Guid("7af325f3-ec58-4f5d-9581-e520f5ed61a8"),
                            Module = "Payroll",
                            Name = "Deduction Type",
                            Path = "Deduction-Type",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("0f70fc78-70c0-4c19-9601-2151e9cc5d08"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8693),
                            ModifiedBy = new Guid("0b9b91f8-e6ca-4ce4-9ffe-62aaf1e11d55"),
                            Module = "Payroll",
                            Name = "Shift Schedules",
                            Path = "Shift-Schedules",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("4db0c1a4-ea6e-4dcb-a9e1-7ed82453b613"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8694),
                            ModifiedBy = new Guid("e3fe9c05-d1b5-42a7-8be1-6a5cb333c234"),
                            Module = "Admin",
                            Name = "Invite",
                            Path = "Invite",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("0a1e0f35-77f3-4171-b663-fd89e5a782a7"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8696),
                            ModifiedBy = new Guid("3102cd65-6f68-40bc-9899-9427538abf9e"),
                            Module = "Admin",
                            Name = "Access",
                            Path = "Access",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("e12d6c3f-9a0a-43b2-8b77-4e59f0888251"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8700),
                            ModifiedBy = new Guid("c242228f-bac8-48dd-98fe-081a0dbf648b"),
                            Module = "Admin",
                            Name = "Calendar",
                            Path = "Calendar",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("387d7a20-638e-438e-be9f-c94d10f2a911"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8703),
                            ModifiedBy = new Guid("38b8ba44-2235-4d03-aa7b-0e3e84761c92"),
                            Module = "Admin",
                            Name = "Permission",
                            Path = "Permission",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("8110cd1a-986b-4398-ac44-49788cd6033c"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8705),
                            ModifiedBy = new Guid("b181022d-5c18-48b8-84e3-cf6192d1f44f"),
                            Module = "Leave",
                            Name = "LeaveType",
                            Path = "Leave-Types",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("8ea360ce-9ecd-4af5-91a4-1def1cf8105c"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8706),
                            ModifiedBy = new Guid("a4a8e57d-e610-465d-a9cc-4521dfcb396b"),
                            Module = "Leave",
                            Name = "LeaveEntitlement",
                            Path = "Leave-Entitlement",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("cb66be63-77e5-4cbd-9d70-af571d5b9717"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8709),
                            ModifiedBy = new Guid("693bc293-d90c-410f-8690-96758b37e7af"),
                            Module = "Leave",
                            Name = "LeaveApplication",
                            Path = "Leave-Application",
                            Roles = "Admin,Manager,Hr,Lead,User"
                        },
                        new
                        {
                            Id = new Guid("09845c05-603f-4772-beea-f26ce01fa6cf"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8711),
                            ModifiedBy = new Guid("c4677a73-dc48-455d-b3dc-076a273f363d"),
                            Module = "Leave",
                            Name = "LeaveRequest",
                            Path = "Leave-Request",
                            Roles = "Admin,Manager,Hr,Lead"
                        },
                        new
                        {
                            Id = new Guid("aa9d96be-3793-4cc2-8c83-63557d3a1fad"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 18, 4, 14, 30, 444, DateTimeKind.Utc).AddTicks(8713),
                            ModifiedBy = new Guid("fa080d2c-bd79-4e96-bad9-1cc40600c52f"),
                            Module = "Employees",
                            Name = "My Department Team",
                            Path = "My-Department-Team",
                            Roles = "Admin,Manager,Lead"
                        });
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("AssignedProjects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ChangeStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPending")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tag")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ParentTrackId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRenting")
                        .HasColumnType("bit");

                    b.Property<string>("LandLord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Village")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateUri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AvatarUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CivilStatus")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRendered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSeparated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PagIbigId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhilHealthId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSSId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShiftScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TIN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShiftScheduleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploymentHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ColleagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBrith")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsColleauge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmergencyContact")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId1");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BasePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("SalaryHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LeadId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApprovedByLeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApprovedByManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByLeadId");

                    b.HasIndex("ApprovedByManagerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntitledDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Notification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Notification.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Meta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RedirectToUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AllowanceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AllowanceEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AllowanceTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.DeductionTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeLoans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amortization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("LoanTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Months")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LoanTypesId");

                    b.ToTable("EmployeeLoans");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeStatutories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("HDMFEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HDMFER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PHICEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PHICER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSEC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TaxTableId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("TaxTableId");

                    b.ToTable("EmployeeStatutories");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DeductionTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeductionTypesId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesDeduction");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.LoanTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoanTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.PayrollConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("FromDay")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayOutDay")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("ToDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PayrollConfig");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.PayrollConfigDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PayrollConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PayrollConfigId");

                    b.ToTable("PayrollConfigDetails");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.ShiftSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BreakTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestDays")
                        .HasColumnType("int");

                    b.Property<long>("TimeIn")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeOut")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShiftSchedules");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.TaxTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExcessOver")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FixRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RangeFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RangeTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaxPeriodType")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TaxTable");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UITheme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithOne("Permission")
                        .HasForeignKey("Hris.Data.Models.Administrator.Permission", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("AssignedProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Track", "ParentTrack")
                        .WithMany()
                        .HasForeignKey("ParentTrackId");

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Approver");

                    b.Navigation("Employee");

                    b.Navigation("ParentTrack");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Hris.Data.Models.Payroll.ShiftSchedule", "ShiftSchedule")
                        .WithMany()
                        .HasForeignKey("ShiftScheduleId");

                    b.Navigation("Position");

                    b.Navigation("ShiftSchedule");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("EmploymentHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId1");

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Family")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("SalaryHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Department", "Department")
                        .WithMany("Teams")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("TeamMembers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByLead")
                        .WithMany()
                        .HasForeignKey("ApprovedByLeadId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByManager")
                        .WithMany()
                        .HasForeignKey("ApprovedByManagerId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedByLead");

                    b.Navigation("ApprovedByManager");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Notification.Notification", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.AllowanceType", "AllowanceType")
                        .WithMany()
                        .HasForeignKey("AllowanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Allowances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AllowanceType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeLoans", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Payroll.LoanTypes", "LoanTypes")
                        .WithMany()
                        .HasForeignKey("LoanTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LoanTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeStatutories", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("EmployeeStatutories")
                        .HasForeignKey("Hris.Data.Models.Payroll.EmployeeStatutories", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Payroll.TaxTable", "TaxTable")
                        .WithMany()
                        .HasForeignKey("TaxTableId");

                    b.Navigation("TaxTable");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.DeductionTypes", "DeductionTypes")
                        .WithMany()
                        .HasForeignKey("DeductionTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("EmployeesDeduction")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.PayrollConfigDetails", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Payroll.PayrollConfig", "PayrollConfig")
                        .WithMany()
                        .HasForeignKey("PayrollConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PayrollConfig");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("Settings")
                        .HasForeignKey("Hris.Data.Models.Settings.UserSettings", "EmployeeId");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Allowances");

                    b.Navigation("AssignedProjects");

                    b.Navigation("EmployeeStatutories");

                    b.Navigation("EmployeesDeduction");

                    b.Navigation("EmploymentHistory");

                    b.Navigation("Family");

                    b.Navigation("Notifications");

                    b.Navigation("Permission");

                    b.Navigation("SalaryHistory");

                    b.Navigation("Settings");

                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
