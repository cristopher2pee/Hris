// <auto-generated />
using System;
using Hris.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hris.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240402092115_AddedPagesToContext")]
    partial class AddedPagesToContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hris.Data.Models.Administrator.Access", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accesses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1c03ab3-6cb3-4fb4-bf0a-485f7b58aefb"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1662),
                            ModifiedBy = new Guid("3bd959fa-f526-44be-a0b6-e1d517ce4633"),
                            Module = "Employees",
                            Name = "Employee",
                            Path = "Employee",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("6458e77c-92a8-4c3c-bdb1-e85dbf1390fe"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1666),
                            ModifiedBy = new Guid("d7e132f5-1b7d-4ca3-865a-1c36a3d0a2ed"),
                            Module = "Employees",
                            Name = "Department",
                            Path = "Department",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("42a3ce86-96a3-4c6c-a3ae-065423ea5e3e"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1668),
                            ModifiedBy = new Guid("c6799656-ffd1-483f-8190-4ae04c7cda16"),
                            Module = "Employees",
                            Name = "Position",
                            Path = "Position",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("f34ade57-a64d-4204-910b-2f96a18a4e1b"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1670),
                            ModifiedBy = new Guid("124540b1-db99-44e5-ac12-08acef5de86d"),
                            Module = "Employees",
                            Name = "Employee Reports",
                            Path = "Employee-Reports",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("5fd1dd81-af54-48bd-b5fe-560ab62edb19"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1683),
                            ModifiedBy = new Guid("e86d6250-991c-4973-9a38-9b8e1d147086"),
                            Module = "Employees",
                            Name = "Generate Employee COE",
                            Path = "Employee-Reports/Generate-Coe",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("16d2270d-fd43-42f4-a77f-e3174d8657f8"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1685),
                            ModifiedBy = new Guid("f010b9f5-c343-48ea-bdee-5607d4915c48"),
                            Module = "Clock",
                            Name = "Project",
                            Path = "Project",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("6dca4ee3-059a-4a7b-85d6-967568ee035e"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1687),
                            ModifiedBy = new Guid("c4d78ded-bee8-4774-810f-f5515a58ed8f"),
                            Module = "Clock",
                            Name = "Clients",
                            Path = "Clients",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("e0bff17a-7707-4a99-89aa-afbe58c6d3d9"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1689),
                            ModifiedBy = new Guid("c1e68381-678d-40f2-9e19-23cbff4a3e4b"),
                            Module = "Clock",
                            Name = "Track",
                            Path = "Track",
                            Roles = "User,Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("7bb6bf59-6d60-428a-b27c-c26e2579457f"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1693),
                            ModifiedBy = new Guid("ae112326-5d41-4be0-a509-a9dad1a9f1b3"),
                            Module = "Clock",
                            Name = "ChangeRequest",
                            Path = "ChangeRequest",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("28852bb6-18d0-414b-a031-359944128a60"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1694),
                            ModifiedBy = new Guid("b683b42a-45ea-496b-8370-d3bf81c28835"),
                            Module = "Clock",
                            Name = "AssignProject",
                            Path = "AssignProject",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("dd3f2386-b0b9-4ca8-90fd-00402e7178f7"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1696),
                            ModifiedBy = new Guid("aa28ad52-50c1-4ee0-9a0e-49db1b98b617"),
                            Module = "Clock",
                            Name = "Reports",
                            Path = "Reports",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("28789567-566e-4a2d-9d2a-eb54e9d8e117"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1698),
                            ModifiedBy = new Guid("cbfad239-783b-4307-bf99-5bb311196134"),
                            Module = "Payroll",
                            Name = "AllowanceType",
                            Path = "AllowanceType",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("f6d7ee3d-4100-48e6-856e-5695401476fc"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1701),
                            ModifiedBy = new Guid("fbc5b9b4-bdd6-42a3-8d19-62de28bfd5a0"),
                            Module = "Payroll",
                            Name = "Entitlements",
                            Path = "Entitlements",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("b98fd52d-5f19-461e-9490-1fae91946f82"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1702),
                            ModifiedBy = new Guid("220b8017-9c1a-4446-ac99-9700f2c8890d"),
                            Module = "Payroll",
                            Name = "Deduction Type",
                            Path = "Deduction-Type",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("7f6e1d55-8ab6-44b4-ab9b-152382f2c640"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1704),
                            ModifiedBy = new Guid("e280a8ac-56b8-4b30-b992-f85eaf652e13"),
                            Module = "Payroll",
                            Name = "Shift Schedules",
                            Path = "Shift-Schedules",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("fa8767c1-683d-4c95-b197-efafbe5bddf0"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1705),
                            ModifiedBy = new Guid("3d0291f3-91f3-4e86-9fbd-9c3b946d611a"),
                            Module = "Admin",
                            Name = "Invite",
                            Path = "Invite",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("59fe02c2-d7d1-4e2b-9132-96efa54e226f"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1709),
                            ModifiedBy = new Guid("4d281036-5338-4231-a66d-06483ed8fb35"),
                            Module = "Admin",
                            Name = "Access",
                            Path = "Access",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("3fd24731-ff87-459c-8e36-7cd336a99c1d"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1710),
                            ModifiedBy = new Guid("668a1135-0f46-4832-a8c2-67b5d9ceee26"),
                            Module = "Admin",
                            Name = "Calendar",
                            Path = "Calendar",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("eab8b47c-5bb0-43a9-ac83-b24ee10f6029"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1712),
                            ModifiedBy = new Guid("4632557d-fd0c-42c8-83c6-e81ef411c9b4"),
                            Module = "Admin",
                            Name = "Permission",
                            Path = "Permission",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("aac2d816-a15f-47a6-9714-bde1b87f2da6"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1713),
                            ModifiedBy = new Guid("2cb55152-ffcb-4e2e-b033-9c9c6ba8ec3e"),
                            Module = "Leave",
                            Name = "LeaveType",
                            Path = "Leave-Types",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("9bcaf44e-0650-49de-876c-83d9412586b7"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1716),
                            ModifiedBy = new Guid("41dd6e96-df4f-41b3-93f8-1029075475d8"),
                            Module = "Leave",
                            Name = "LeaveEntitlement",
                            Path = "Leave-Entitlement",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("3dbb05a1-afd4-48a2-b867-320b58bf54d5"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1718),
                            ModifiedBy = new Guid("6d5a5845-8369-4c1f-84ab-6be099b4b137"),
                            Module = "Leave",
                            Name = "LeaveApplication",
                            Path = "Leave-Application",
                            Roles = "Admin,Manager,Hr,Lead,User"
                        },
                        new
                        {
                            Id = new Guid("7a5be50b-ccda-48b3-8d6f-72d30b1826fa"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1719),
                            ModifiedBy = new Guid("296084f6-8dd2-4ab7-ac76-aeadf3a3430e"),
                            Module = "Leave",
                            Name = "LeaveRequest",
                            Path = "Leave-Request",
                            Roles = "Admin,Manager,Hr,Lead"
                        },
                        new
                        {
                            Id = new Guid("09b733af-947f-4196-b201-45adaa9f0ee7"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 2, 9, 21, 15, 499, DateTimeKind.Utc).AddTicks(1721),
                            ModifiedBy = new Guid("1ff61ada-eb51-4b15-8f33-4f42f3b4bc08"),
                            Module = "Employees",
                            Name = "My Department Team",
                            Path = "My-Department-Team",
                            Roles = "Admin,Manager,Lead"
                        });
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("AssignedProjects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ChangeStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPending")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ParentTrackId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRenting")
                        .HasColumnType("bit");

                    b.Property<string>("LandLord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Village")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateUri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AvatarUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CivilStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRendered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSeparated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploymentHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ColleagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBrith")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsColleauge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmergencyContact")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId1");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BasePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("SalaryHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Statutory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatutoryType")
                        .HasColumnType("int");

                    b.Property<string>("StutoryId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Statutories");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LeadId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApprovedByLeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApprovedByManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByLeadId");

                    b.HasIndex("ApprovedByManagerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntitledDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Notification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AllowanceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AllowanceEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AllowanceTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.DeductionTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DeductionTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeductionTypesId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesDeduction");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UITheme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithOne("Permission")
                        .HasForeignKey("Hris.Data.Models.Administrator.Permission", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("AssignedProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Track", "ParentTrack")
                        .WithMany()
                        .HasForeignKey("ParentTrackId");

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Approver");

                    b.Navigation("Employee");

                    b.Navigation("ParentTrack");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("EmploymentHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId1");

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Family")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("SalaryHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Statutory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Statutories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Department", "Department")
                        .WithMany("Teams")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("TeamMembers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByLead")
                        .WithMany()
                        .HasForeignKey("ApprovedByLeadId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByManager")
                        .WithMany()
                        .HasForeignKey("ApprovedByManagerId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedByLead");

                    b.Navigation("ApprovedByManager");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.AllowanceType", "AllowanceType")
                        .WithMany()
                        .HasForeignKey("AllowanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Allowances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AllowanceType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.DeductionTypes", "DeductionTypes")
                        .WithMany()
                        .HasForeignKey("DeductionTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("EmployeesDeduction")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("Settings")
                        .HasForeignKey("Hris.Data.Models.Settings.UserSettings", "EmployeeId");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Allowances");

                    b.Navigation("AssignedProjects");

                    b.Navigation("EmployeesDeduction");

                    b.Navigation("EmploymentHistory");

                    b.Navigation("Family");

                    b.Navigation("Permission");

                    b.Navigation("SalaryHistory");

                    b.Navigation("Settings");

                    b.Navigation("Statutories");

                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
