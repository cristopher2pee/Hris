// <auto-generated />
using System;
using Hris.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hris.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240124102624_EmployeeEntityUpdate")]
    partial class EmployeeEntityUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hris.Data.Models.Administrator.Access", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accesses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81f65bf9-807c-4ab6-92d9-82dfe2bf8abe"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(438),
                            ModifiedBy = new Guid("6e2c6583-b258-4b5a-bc44-519dc8dd4020"),
                            Module = "Employees",
                            Name = "Employee",
                            Path = "Employee",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("43d11733-6105-444a-b73b-eb8c26fe93b7"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(446),
                            ModifiedBy = new Guid("a1f95eca-10b3-4385-ae25-c20c95e04c24"),
                            Module = "Employees",
                            Name = "Department",
                            Path = "Department",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("5a21a181-970a-4601-9573-ac185fc0f0b3"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(458),
                            ModifiedBy = new Guid("2d101448-05f9-4f31-afd7-7069f50f0a04"),
                            Module = "Employees",
                            Name = "Position",
                            Path = "Position",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("8c9711ea-197c-4164-9c5b-1b9442bf0017"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(459),
                            ModifiedBy = new Guid("07e16921-2ffd-4634-9cc6-f6860dbb617f"),
                            Module = "Clock",
                            Name = "Project",
                            Path = "Project",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("dd97c2a1-edd0-47e3-936a-4e675ea7d72a"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(461),
                            ModifiedBy = new Guid("dd48b7ba-1703-4abe-91be-f240e7dc7907"),
                            Module = "Clock",
                            Name = "Clients",
                            Path = "Clients",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("1fb1e4b7-3ef3-47b1-9d0c-da2eab92ff37"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(462),
                            ModifiedBy = new Guid("de60055c-bd92-4bf5-9036-9588d3dbafdc"),
                            Module = "Clock",
                            Name = "Track",
                            Path = "Track",
                            Roles = "User,Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("ae489890-400f-4c78-b1b8-5a3f545e790f"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(465),
                            ModifiedBy = new Guid("55edf4dd-1eb3-4fe1-9840-158e3a95a205"),
                            Module = "Clock",
                            Name = "ChangeRequest",
                            Path = "ChangeRequest",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("775b6c0b-fd0f-4546-aae7-3b85706a67a0"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(466),
                            ModifiedBy = new Guid("22338b92-698e-49e5-9754-3dd39a05672b"),
                            Module = "Clock",
                            Name = "AssignProject",
                            Path = "AssignProject",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("07799b5c-ecb1-4c40-a0b8-aaa1e34fb927"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(467),
                            ModifiedBy = new Guid("e1c52a95-9da6-4054-9973-0de91d66561c"),
                            Module = "Clock",
                            Name = "Reports",
                            Path = "Reports",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("a6d9d0c3-4d40-48cc-97cb-6d0f696a15bb"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(469),
                            ModifiedBy = new Guid("f323f29d-1aec-49e4-a745-0474e7772db4"),
                            Module = "Payroll",
                            Name = "AllowanceType",
                            Path = "AllowanceType",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("1d148b29-4860-4220-b72b-9dc397884f45"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(472),
                            ModifiedBy = new Guid("2bfdd321-baaa-4e65-8a80-2d3d81be06d4"),
                            Module = "Payroll",
                            Name = "Entitlements",
                            Path = "Entitlements",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("d98a38b0-ccac-4709-afc6-819652fb7fb1"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(473),
                            ModifiedBy = new Guid("e74d9b69-ff83-4d42-bf05-ff864b4c54a6"),
                            Module = "Admin",
                            Name = "Invite",
                            Path = "Invite",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("30fdf0a2-1f29-47b2-8942-e45ddfede71d"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(474),
                            ModifiedBy = new Guid("496ebca1-0635-49c4-9614-4e7f4f196faa"),
                            Module = "Admin",
                            Name = "Access",
                            Path = "Access",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("e4e003a5-8f97-4d77-b943-dfdc7b286edc"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(475),
                            ModifiedBy = new Guid("4323c70c-a2fa-497e-8e0d-81878e4d985a"),
                            Module = "Admin",
                            Name = "Calendar",
                            Path = "Calendar",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("a4d00c9c-9470-404d-9a0a-c61d36a5be7d"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(478),
                            ModifiedBy = new Guid("1dce7f17-2a2f-4532-a18b-03957d5d052f"),
                            Module = "Admin",
                            Name = "Permission",
                            Path = "Permission",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("a516ac36-2b90-47f1-8098-b98490d1ab03"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(479),
                            ModifiedBy = new Guid("63351055-93c2-4b66-b4ba-b56f31c0ae25"),
                            Module = "Leave",
                            Name = "LeaveType",
                            Path = "Leave-Types",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("7ab9c591-f6a0-43fe-a97b-9d737e942297"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(480),
                            ModifiedBy = new Guid("47016b68-b24a-4323-ace5-71e9067ec3a1"),
                            Module = "Leave",
                            Name = "LeaveEntitlement",
                            Path = "Leave-Entitlement",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("24aae7cb-2ca9-4085-988a-35fd3a42cb26"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(481),
                            ModifiedBy = new Guid("2589d5e6-abf6-4059-93c3-0bb0ac830a96"),
                            Module = "Leave",
                            Name = "LeaveApplication",
                            Path = "Leave-Application",
                            Roles = "Admin,Manager,Hr,Lead,User"
                        },
                        new
                        {
                            Id = new Guid("aed8281c-cc7d-4095-8a3a-fe0f033f4b17"),
                            Active = true,
                            Modified = new DateTime(2024, 1, 24, 10, 26, 24, 559, DateTimeKind.Utc).AddTicks(483),
                            ModifiedBy = new Guid("27c79d7f-c746-48df-a104-bd5816fd8e89"),
                            Module = "Leave",
                            Name = "LeaveRequest",
                            Path = "Leave-Request",
                            Roles = "Admin,Manager,Hr,Lead"
                        });
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("AssignedProjects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ChangeStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPending")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ParentTrackId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRenting")
                        .HasColumnType("bit");

                    b.Property<string>("LandLord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Village")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateUri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AvatarUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CivilStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRendered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSeparated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploymentHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ColleagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBrith")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsColleauge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmergencyContact")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId1");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BasePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("SalaryHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Statutory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatutoryType")
                        .HasColumnType("int");

                    b.Property<string>("StutoryId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Statutories");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LeadId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApprovedByLeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApprovedByManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByLeadId");

                    b.HasIndex("ApprovedByManagerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntitledDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Notification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AllowanceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AllowanceEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AllowanceTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UITheme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithOne("Permission")
                        .HasForeignKey("Hris.Data.Models.Administrator.Permission", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("AssignedProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Track", "ParentTrack")
                        .WithMany()
                        .HasForeignKey("ParentTrackId");

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Approver");

                    b.Navigation("Employee");

                    b.Navigation("ParentTrack");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("EmploymentHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId1");

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Family")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("SalaryHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Statutory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Statutories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Department", "Department")
                        .WithMany("Teams")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("TeamMembers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByLead")
                        .WithMany()
                        .HasForeignKey("ApprovedByLeadId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByManager")
                        .WithMany()
                        .HasForeignKey("ApprovedByManagerId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedByLead");

                    b.Navigation("ApprovedByManager");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.AllowanceType", "AllowanceType")
                        .WithMany()
                        .HasForeignKey("AllowanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Allowances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AllowanceType");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("Settings")
                        .HasForeignKey("Hris.Data.Models.Settings.UserSettings", "EmployeeId");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Allowances");

                    b.Navigation("AssignedProjects");

                    b.Navigation("EmploymentHistory");

                    b.Navigation("Family");

                    b.Navigation("Permission");

                    b.Navigation("SalaryHistory");

                    b.Navigation("Settings");

                    b.Navigation("Statutories");

                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
