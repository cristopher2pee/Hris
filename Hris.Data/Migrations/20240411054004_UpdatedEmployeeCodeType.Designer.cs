// <auto-generated />
using System;
using Hris.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hris.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240411054004_UpdatedEmployeeCodeType")]
    partial class UpdatedEmployeeCodeType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hris.Data.Models.Administrator.Access", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accesses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96c6a0c1-304e-4733-a4fc-d9a431f3bfa5"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9598),
                            ModifiedBy = new Guid("a1025cb9-e475-4dc2-a614-da779eb77e6b"),
                            Module = "Employees",
                            Name = "Employee",
                            Path = "Employee",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("addb26ca-c553-4670-a8c4-233663eef9c5"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9616),
                            ModifiedBy = new Guid("cba3456f-c37d-4d57-a603-98732d3ef67d"),
                            Module = "Employees",
                            Name = "Department",
                            Path = "Department",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("ade5c215-69ba-4ad2-a7b4-d216b61b2e51"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9619),
                            ModifiedBy = new Guid("a022031a-0083-4a9c-91bc-a3d25138ab66"),
                            Module = "Employees",
                            Name = "Position",
                            Path = "Position",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("0eb09eaf-6834-4f39-8b59-2916231714ab"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9621),
                            ModifiedBy = new Guid("c90a843e-92de-46e6-a9fa-df8cffc14b86"),
                            Module = "Employees",
                            Name = "Employee Reports",
                            Path = "Employee-Reports",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("a0773279-09a6-442a-b35a-f8349f811ae0"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9623),
                            ModifiedBy = new Guid("82e7db71-94f7-44a5-93a9-9f0061f60017"),
                            Module = "Employees",
                            Name = "Generate Employee COE",
                            Path = "Employee-Reports/Generate-Coe",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("96938c1a-be4f-44cf-a23f-58d6c578f5e3"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9628),
                            ModifiedBy = new Guid("08edca5e-0bf2-46d9-bdac-886229e4399b"),
                            Module = "Clock",
                            Name = "Project",
                            Path = "Project",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("c7261c3f-7837-4ed2-a0b0-55349e8c7129"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9630),
                            ModifiedBy = new Guid("e54e1086-86d7-40e7-9448-417bcc2d363d"),
                            Module = "Clock",
                            Name = "Clients",
                            Path = "Clients",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("2f2e47b9-62d8-4241-afca-56bd1d59c011"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9632),
                            ModifiedBy = new Guid("39934978-7737-46f2-8953-c5fd7c878663"),
                            Module = "Clock",
                            Name = "Track",
                            Path = "Track",
                            Roles = "User,Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("a70f42bb-14d5-495e-81df-e426a6073c23"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9634),
                            ModifiedBy = new Guid("78cfd22a-8e48-435e-ad9f-e9b78b9b5efc"),
                            Module = "Clock",
                            Name = "ChangeRequest",
                            Path = "ChangeRequest",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("175bfb82-5da5-4674-b910-7b8a7e578d23"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9639),
                            ModifiedBy = new Guid("cb35f73b-81e5-4b7c-b89c-152f4dcb17a2"),
                            Module = "Clock",
                            Name = "AssignProject",
                            Path = "AssignProject",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("4e5c3493-f705-4e0a-a832-0cad591bcfe4"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9641),
                            ModifiedBy = new Guid("c5b51c39-41b1-4f8c-93b4-c9f37d672002"),
                            Module = "Clock",
                            Name = "Reports",
                            Path = "Reports",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("0e35376f-6597-4f00-b4cd-bb7602dd1fa8"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9643),
                            ModifiedBy = new Guid("ad8ac4f5-7519-4dca-9b22-dfd13c013cf9"),
                            Module = "Clock",
                            Name = "ImportTracks",
                            Path = "Import-Tracks",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("0b6b9819-7695-4d9e-82db-3196f9189b20"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9645),
                            ModifiedBy = new Guid("fcb0154f-e31c-4850-bdb0-109d47a9df82"),
                            Module = "Payroll",
                            Name = "AllowanceType",
                            Path = "AllowanceType",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("f6009e63-b1c0-4493-9dbc-313f33df7998"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9650),
                            ModifiedBy = new Guid("033a43f7-895a-46e8-b598-cc113ce073a3"),
                            Module = "Payroll",
                            Name = "Entitlements",
                            Path = "Entitlements",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("7896ca87-1f88-45d5-9dbc-85f57e784e23"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9652),
                            ModifiedBy = new Guid("186db636-8db1-42fc-a65e-6306ea15ffc5"),
                            Module = "Payroll",
                            Name = "Deduction Type",
                            Path = "Deduction-Type",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("2e0a8c5b-a29d-4e44-8705-89f6b9428c64"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9654),
                            ModifiedBy = new Guid("18a9ae26-f40d-426a-9a59-97b28adb1eab"),
                            Module = "Payroll",
                            Name = "Shift Schedules",
                            Path = "Shift-Schedules",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("c89f8a4b-76ad-473b-9a98-7512e7dd4508"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9656),
                            ModifiedBy = new Guid("7571610d-7ac9-41b3-918d-f4c13d6285df"),
                            Module = "Admin",
                            Name = "Invite",
                            Path = "Invite",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("26c5b510-8c97-4c93-8b54-5adeea491c64"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9661),
                            ModifiedBy = new Guid("2be9c019-8942-4e1a-a4e2-8da8536b0b82"),
                            Module = "Admin",
                            Name = "Access",
                            Path = "Access",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("69b93c8f-2e75-4e23-919c-bad0b3f97699"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9663),
                            ModifiedBy = new Guid("8be6ccf2-362f-4424-a597-60b0a8406045"),
                            Module = "Admin",
                            Name = "Calendar",
                            Path = "Calendar",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("985c41e4-8674-47d0-874f-f03b248aaa05"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9666),
                            ModifiedBy = new Guid("20a54429-e5cc-4c9f-bdf8-f2f842d202ed"),
                            Module = "Admin",
                            Name = "Permission",
                            Path = "Permission",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("b7f132d0-be41-41d8-b697-902d80416269"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9668),
                            ModifiedBy = new Guid("4373bcd2-fdc4-470f-a358-b3cfa42f632f"),
                            Module = "Leave",
                            Name = "LeaveType",
                            Path = "Leave-Types",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("b7c28212-1bad-4ed0-ad9f-34d0df913869"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9672),
                            ModifiedBy = new Guid("8d100e49-dba7-4dd5-816c-8a4b6a8f36cb"),
                            Module = "Leave",
                            Name = "LeaveEntitlement",
                            Path = "Leave-Entitlement",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("69bc684e-7519-4a39-88ea-39e988e54b66"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9674),
                            ModifiedBy = new Guid("3e751213-029f-47bd-85e0-35e000bd6028"),
                            Module = "Leave",
                            Name = "LeaveApplication",
                            Path = "Leave-Application",
                            Roles = "Admin,Manager,Hr,Lead,User"
                        },
                        new
                        {
                            Id = new Guid("4678e1a1-06fe-45c9-8e99-c5486c3fc917"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9676),
                            ModifiedBy = new Guid("1dc438fb-2bd8-415a-80d1-4130b85291c4"),
                            Module = "Leave",
                            Name = "LeaveRequest",
                            Path = "Leave-Request",
                            Roles = "Admin,Manager,Hr,Lead"
                        },
                        new
                        {
                            Id = new Guid("066425dd-f06c-4037-83a9-dae7c9d8bfd2"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 40, 4, 543, DateTimeKind.Utc).AddTicks(9678),
                            ModifiedBy = new Guid("3fa5d3a6-f111-4b7e-a95d-ca849411e955"),
                            Module = "Employees",
                            Name = "My Department Team",
                            Path = "My-Department-Team",
                            Roles = "Admin,Manager,Lead"
                        });
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("AssignedProjects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ChangeStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPending")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tag")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ParentTrackId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRenting")
                        .HasColumnType("bit");

                    b.Property<string>("LandLord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Village")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateUri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AvatarUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CivilStatus")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRendered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSeparated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PagIbigId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhilHealthId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSSId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShiftScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TIN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShiftScheduleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploymentHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ColleagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBrith")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsColleauge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmergencyContact")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId1");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BasePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("SalaryHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LeadId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApprovedByLeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApprovedByManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByLeadId");

                    b.HasIndex("ApprovedByManagerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntitledDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Notification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AllowanceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AllowanceEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AllowanceTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.DeductionTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeStatutories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("HDMFEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HDMFER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PHICEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PHICER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSEC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TaxTableId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("TaxTableId");

                    b.ToTable("EmployeeStatutories");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DeductionTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeductionTypesId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesDeduction");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.ShiftSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BreakTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestDays")
                        .HasColumnType("int");

                    b.Property<long>("TimeIn")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeOut")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShiftSchedules");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.TaxTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FixRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RangeFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RangeTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TaxTable");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UITheme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithOne("Permission")
                        .HasForeignKey("Hris.Data.Models.Administrator.Permission", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("AssignedProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Track", "ParentTrack")
                        .WithMany()
                        .HasForeignKey("ParentTrackId");

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Approver");

                    b.Navigation("Employee");

                    b.Navigation("ParentTrack");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Hris.Data.Models.Payroll.ShiftSchedule", "ShiftSchedule")
                        .WithMany()
                        .HasForeignKey("ShiftScheduleId");

                    b.Navigation("Position");

                    b.Navigation("ShiftSchedule");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("EmploymentHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId1");

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Family")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("SalaryHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Department", "Department")
                        .WithMany("Teams")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("TeamMembers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByLead")
                        .WithMany()
                        .HasForeignKey("ApprovedByLeadId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByManager")
                        .WithMany()
                        .HasForeignKey("ApprovedByManagerId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedByLead");

                    b.Navigation("ApprovedByManager");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.AllowanceType", "AllowanceType")
                        .WithMany()
                        .HasForeignKey("AllowanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Allowances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AllowanceType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeStatutories", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("EmployeeStatutories")
                        .HasForeignKey("Hris.Data.Models.Payroll.EmployeeStatutories", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Payroll.TaxTable", "TaxTable")
                        .WithMany()
                        .HasForeignKey("TaxTableId");

                    b.Navigation("TaxTable");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.DeductionTypes", "DeductionTypes")
                        .WithMany()
                        .HasForeignKey("DeductionTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("EmployeesDeduction")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("Settings")
                        .HasForeignKey("Hris.Data.Models.Settings.UserSettings", "EmployeeId");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Allowances");

                    b.Navigation("AssignedProjects");

                    b.Navigation("EmployeeStatutories");

                    b.Navigation("EmployeesDeduction");

                    b.Navigation("EmploymentHistory");

                    b.Navigation("Family");

                    b.Navigation("Permission");

                    b.Navigation("SalaryHistory");

                    b.Navigation("Settings");

                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
