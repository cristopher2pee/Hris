// <auto-generated />
using System;
using Hris.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hris.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240411052846_AddedTrackTag")]
    partial class AddedTrackTag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hris.Data.Models.Administrator.Access", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accesses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1672fb59-4666-4df3-afde-a81abd72753e"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(719),
                            ModifiedBy = new Guid("de20e8af-7d15-49f3-99f9-4dffc846fc8b"),
                            Module = "Employees",
                            Name = "Employee",
                            Path = "Employee",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("ac178a87-1097-4dee-8c87-ba921be3be2c"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(724),
                            ModifiedBy = new Guid("769d54a4-8e40-411e-91dd-ec1052cf99cf"),
                            Module = "Employees",
                            Name = "Department",
                            Path = "Department",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("c2e1dddd-78d6-44e1-b01b-cfeb7c369908"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(743),
                            ModifiedBy = new Guid("7938d5c7-0eb6-49e8-9b58-4b1c3254c58b"),
                            Module = "Employees",
                            Name = "Position",
                            Path = "Position",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("6ecd1916-6076-4e62-bac5-40ebdef2a4f2"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(746),
                            ModifiedBy = new Guid("c2ab696f-1ae4-45fe-b6c4-03d1af8d984f"),
                            Module = "Employees",
                            Name = "Employee Reports",
                            Path = "Employee-Reports",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("ff6aa1a7-9d1b-4c81-addc-fbed065f130b"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(749),
                            ModifiedBy = new Guid("9aa11a33-9585-4d3a-bedc-0c84f977d583"),
                            Module = "Employees",
                            Name = "Generate Employee COE",
                            Path = "Employee-Reports/Generate-Coe",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("afb2cd04-2b1a-4f92-8a38-2147eb9904ee"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(752),
                            ModifiedBy = new Guid("ce37ac6f-06c6-4c6e-9714-407e7a07f8b8"),
                            Module = "Clock",
                            Name = "Project",
                            Path = "Project",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("08fec076-58bb-4038-bb4e-5760d90be08e"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(758),
                            ModifiedBy = new Guid("652978d8-e782-4225-b644-8fd41318d903"),
                            Module = "Clock",
                            Name = "Clients",
                            Path = "Clients",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("c1eec4d3-dc13-4cfc-adaf-b261603893d1"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(760),
                            ModifiedBy = new Guid("57c9cae6-166b-4968-8258-49202ac28de3"),
                            Module = "Clock",
                            Name = "Track",
                            Path = "Track",
                            Roles = "User,Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("537ffb7d-47d0-4754-874f-d41c37919728"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(762),
                            ModifiedBy = new Guid("51365b2a-6860-4cdf-904e-13caaf7cbbd6"),
                            Module = "Clock",
                            Name = "ChangeRequest",
                            Path = "ChangeRequest",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("c90c76bd-483e-43ec-8c92-1b63814fb984"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(764),
                            ModifiedBy = new Guid("ac6e38b6-680d-4964-9ef4-9a42de30d435"),
                            Module = "Clock",
                            Name = "AssignProject",
                            Path = "AssignProject",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("658eee38-2363-4a83-876f-b5951e54acbe"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(772),
                            ModifiedBy = new Guid("27781010-11ed-4e49-a4b2-7f5f5be45dc9"),
                            Module = "Clock",
                            Name = "Reports",
                            Path = "Reports",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("6a046949-0ffb-4069-b974-4e3a63cb46b4"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(774),
                            ModifiedBy = new Guid("aad7e958-3747-4cbd-96d0-81b4f50bc550"),
                            Module = "Clock",
                            Name = "ImportTracks",
                            Path = "Import-Tracks",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("5395ecd0-203f-4687-8202-18222daccb60"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(776),
                            ModifiedBy = new Guid("8672692d-30f5-4c11-9894-2ae3192a6e3b"),
                            Module = "Payroll",
                            Name = "AllowanceType",
                            Path = "AllowanceType",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("b075d46b-4480-4021-94d0-ac9ebcbc98b6"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(779),
                            ModifiedBy = new Guid("d7a9d206-d8da-4bd7-b637-bf5c97031423"),
                            Module = "Payroll",
                            Name = "Entitlements",
                            Path = "Entitlements",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("a40adb3f-fd8e-40ba-834f-c64600d32bbe"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(784),
                            ModifiedBy = new Guid("99415bc4-f088-45ff-a151-80971d196b8a"),
                            Module = "Payroll",
                            Name = "Deduction Type",
                            Path = "Deduction-Type",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("20f8ff8e-d108-436a-b2ee-0b66eb757536"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(786),
                            ModifiedBy = new Guid("f331b30c-7c01-437a-b6c5-83d26e0f5a03"),
                            Module = "Payroll",
                            Name = "Shift Schedules",
                            Path = "Shift-Schedules",
                            Roles = "Admin,Hr"
                        },
                        new
                        {
                            Id = new Guid("cd7a2105-b14e-4112-8961-a5b567e43d22"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(788),
                            ModifiedBy = new Guid("ffbb425b-f39d-4346-89c2-c59f0e8987bd"),
                            Module = "Admin",
                            Name = "Invite",
                            Path = "Invite",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("24bbee6d-ee2b-4edc-9267-177191780665"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(790),
                            ModifiedBy = new Guid("af2a87cb-a5a3-443f-88fb-e64fe6662241"),
                            Module = "Admin",
                            Name = "Access",
                            Path = "Access",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("0a871a7f-cd39-40c3-b4f0-78b7dbd8432b"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(794),
                            ModifiedBy = new Guid("88ecae04-d3a1-462a-9a7d-8c9d2d5425c0"),
                            Module = "Admin",
                            Name = "Calendar",
                            Path = "Calendar",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("735276db-b763-4593-a71e-5a37d49e2071"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(796),
                            ModifiedBy = new Guid("12f17791-2ae3-4693-a72f-de0b2a20577d"),
                            Module = "Admin",
                            Name = "Permission",
                            Path = "Permission",
                            Roles = "Admin,Manager"
                        },
                        new
                        {
                            Id = new Guid("1f2693d6-25b1-4519-ba06-30e6d84d2e39"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(799),
                            ModifiedBy = new Guid("008e2477-65e1-4221-92d1-873a2c237943"),
                            Module = "Leave",
                            Name = "LeaveType",
                            Path = "Leave-Types",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("aae4f5e7-8209-452d-a639-f391f7a32aa3"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(801),
                            ModifiedBy = new Guid("6a317fa5-b1a5-4110-b2ba-2871224d1c45"),
                            Module = "Leave",
                            Name = "LeaveEntitlement",
                            Path = "Leave-Entitlement",
                            Roles = "Admin,Manager,Hr"
                        },
                        new
                        {
                            Id = new Guid("44cadcda-6210-41c8-a769-62ef288116ad"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(806),
                            ModifiedBy = new Guid("25e651c8-c03d-44d5-a61e-4df8b4cdf4da"),
                            Module = "Leave",
                            Name = "LeaveApplication",
                            Path = "Leave-Application",
                            Roles = "Admin,Manager,Hr,Lead,User"
                        },
                        new
                        {
                            Id = new Guid("39d22ddd-aff0-48e8-bb02-775e81daf640"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(808),
                            ModifiedBy = new Guid("68f10fe1-2302-4155-93a2-2d4207e9cd4d"),
                            Module = "Leave",
                            Name = "LeaveRequest",
                            Path = "Leave-Request",
                            Roles = "Admin,Manager,Hr,Lead"
                        },
                        new
                        {
                            Id = new Guid("31b8cfd0-14fd-4622-8702-c66b487967c6"),
                            Active = true,
                            Modified = new DateTime(2024, 4, 11, 5, 28, 46, 416, DateTimeKind.Utc).AddTicks(810),
                            ModifiedBy = new Guid("d5d6c262-c866-49dd-926c-e8f285f878af"),
                            Module = "Employees",
                            Name = "My Department Team",
                            Path = "My-Department-Team",
                            Roles = "Admin,Manager,Lead"
                        });
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("AssignedProjects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ChangeStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPending")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tag")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ParentTrackId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRenting")
                        .HasColumnType("bit");

                    b.Property<string>("LandLord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Village")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateUri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AvatarUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CivilStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRendered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSeparated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeStatus")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PagIbigId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhilHealthId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSSId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShiftScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TIN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShiftScheduleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploymentHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ColleagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBrith")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsColleauge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmergencyContact")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId1");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BasePay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectivityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("SalaryHistory");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LeadId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApprovedByLeadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApprovedByManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByLeadId");

                    b.HasIndex("ApprovedByManagerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeaveTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntitledDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Notification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AllowanceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AllowanceEntitlements");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AllowanceTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.DeductionTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeStatutories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("HDMFEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HDMFER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PHICEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PHICER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSEC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SSSER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TaxTableId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("TaxTableId");

                    b.ToTable("EmployeeStatutories");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DeductionTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeductionTypesId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesDeduction");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.ShiftSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BreakTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestDays")
                        .HasColumnType("int");

                    b.Property<long>("TimeIn")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeOut")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShiftSchedules");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.TaxTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FixRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RangeFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RangeTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TaxTable");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UITheme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Hris.Data.Models.Administrator.Permission", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithOne("Permission")
                        .HasForeignKey("Hris.Data.Models.Administrator.Permission", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.AssignedProject", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("AssignedProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.ProjectTask", b =>
                {
                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Track", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Clock.Track", "ParentTrack")
                        .WithMany()
                        .HasForeignKey("ParentTrackId");

                    b.HasOne("Hris.Data.Models.Clock.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Hris.Data.Models.Clock.ProjectTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Approver");

                    b.Navigation("Employee");

                    b.Navigation("ParentTrack");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Address", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Hris.Data.Models.Payroll.ShiftSchedule", "ShiftSchedule")
                        .WithMany()
                        .HasForeignKey("ShiftScheduleId");

                    b.Navigation("Position");

                    b.Navigation("ShiftSchedule");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.EmploymentHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("EmploymentHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Family", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId1");

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Family")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.SalaryHistory", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("SalaryHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Team", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Department", "Department")
                        .WithMany("Teams")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.TeamMember", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany("TeamMembers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveApplication", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByLead")
                        .WithMany()
                        .HasForeignKey("ApprovedByLeadId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "ApprovedByManager")
                        .WithMany()
                        .HasForeignKey("ApprovedByManagerId");

                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedByLead");

                    b.Navigation("ApprovedByManager");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Leave.LeaveEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.AllowanceEntitlement", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.AllowanceType", "AllowanceType")
                        .WithMany()
                        .HasForeignKey("AllowanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("Allowances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AllowanceType");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeeStatutories", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("EmployeeStatutories")
                        .HasForeignKey("Hris.Data.Models.Payroll.EmployeeStatutories", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Payroll.TaxTable", "TaxTable")
                        .WithMany()
                        .HasForeignKey("TaxTableId");

                    b.Navigation("TaxTable");
                });

            modelBuilder.Entity("Hris.Data.Models.Payroll.EmployeesDeduction", b =>
                {
                    b.HasOne("Hris.Data.Models.Payroll.DeductionTypes", "DeductionTypes")
                        .WithMany()
                        .HasForeignKey("DeductionTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithMany("EmployeesDeduction")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeductionTypes");
                });

            modelBuilder.Entity("Hris.Data.Models.Settings.UserSettings", b =>
                {
                    b.HasOne("Hris.Data.Models.Employee.Employee", null)
                        .WithOne("Settings")
                        .HasForeignKey("Hris.Data.Models.Settings.UserSettings", "EmployeeId");
                });

            modelBuilder.Entity("Hris.Data.Models.Clock.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Department", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hris.Data.Models.Employee.Employee", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Allowances");

                    b.Navigation("AssignedProjects");

                    b.Navigation("EmployeeStatutories");

                    b.Navigation("EmployeesDeduction");

                    b.Navigation("EmploymentHistory");

                    b.Navigation("Family");

                    b.Navigation("Permission");

                    b.Navigation("SalaryHistory");

                    b.Navigation("Settings");

                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
